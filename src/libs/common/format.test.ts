import { FmtAmount } from "./format";

// TODO test

describe('FmtAmount', () => {
  it('should format the number correctly', () => {
    expect(FmtAmount(0)).toBe('0')
    expect(FmtAmount(1)).toBe('1')
    expect(FmtAmount(-1)).toBe('-1')
    expect(FmtAmount(1000)).toBe('1.000K')
    expect(FmtAmount(-1000)).toBe('-1.000K')
    expect(FmtAmount(1000000)).toBe('1.000M')
    expect(FmtAmount(-1000000)).toBe('-1.000M')
    expect(FmtAmount(1000000000)).toBe('1.000B')
    expect(FmtAmount(-1000000000)).toBe('-1.000B')
    expect(FmtAmount(1000000000000)).toBe('1.000T')
    expect(FmtAmount(-1000000000000)).toBe('-1.000T')
    expect(FmtAmount(1234.5678)).toBe('1.234')
    expect(FmtAmount(1234.5678, 2)).toBe('1.234')
    expect(FmtAmount(1234.5678, 1)).toBe('1.2')
    expect(FmtAmount(1234.5678, 0)).toBe('1')
    expect(FmtAmount(0.0001, 4)).toBe('0.0001')
    expect(FmtAmount(0.00001, 4)).toBe('0.0000')
    expect(FmtAmount(0.000001, 4)).toBe('0.0000')
    expect(() => FmtAmount(1, -1)).toThrow('digits needs to be greater than 0')
    expect(FmtAmount(NaN)).toBe('-')
    expect(FmtAmount('abc')).toBe('-')
    expect(FmtAmount('1000')).toBe('1.000K')
    expect(FmtAmount('1,000,000')).toBe('1.000M')
    expect(FmtAmount('1.234')).toBe('1.234')
    expect(FmtAmount(1e25)).toBe('10.000Y')
    expect(FmtAmount(-1e25)).toBe('-10.000Y')
    expect(FmtAmount(1e28)).toBe('10.000Y')
    expect(FmtAmount(-1e28)).toBe('-10.000Y')
    expect(FmtAmount(1e-8)).toBe('0.00000001')
    expect(FmtAmount(1e-10)).toBe('0.0000000001')
    expect(FmtAmount(1e-12)).toBe('0.000000000001')
    expect(FmtAmount(1e-25)).toBe('0.0000000000000000000000001')
    expect(FmtAmount(-1e-25)).toBe('-0.0000000000000000000000001')
  })
})
